{"ast":null,"code":"var _jsxFileName = \"D:\\\\React_programs\\\\myreact\\\\weekly-calender\\\\client\\\\src\\\\Components\\\\Calender.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Calendar, momentLocalizer } from \"react-big-calendar\";\nimport moment from \"moment\";\nimport { toast } from 'react-hot-toast';\nimport axios from \"axios\";\nimport \"react-big-calendar/lib/css/react-big-calendar.css\";\nimport withDragAndDrop from 'react-big-calendar/lib/addons/dragAndDrop';\nimport 'react-big-calendar/lib/addons/dragAndDrop/styles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst localizer = momentLocalizer(moment);\nconst Calender = ({\n  onAdd,\n  onDelete,\n  onUpdate\n}) => {\n  _s();\n  const DragAndDropCalendar = withDragAndDrop(Calendar);\n  const [appointments, setAppointments] = useState([]);\n  const [data, setData] = useState([]);\n  console.log(appointments);\n\n  // Fetch appointments from the database\n  useEffect(() => {\n    async function fetchAppointments() {\n      const response = await fetch(\"/\");\n      const data = await response.json();\n      console.log(data);\n      setAppointments(data);\n    }\n    fetchAppointments();\n  }, []);\n\n  // Handle adding appointments\n  const handleSelectSlot = async slotInfo => {\n    const title = prompt(\"Enter appointment title:\");\n    if (title) {\n      const newAppointment = {\n        id: Date.now(),\n        title,\n        start: slotInfo.start,\n        end: slotInfo.end\n      };\n      setAppointments([...appointments, newAppointment]);\n      // onAdd(handleAddAppointment); // Update in the database\n\n      const response = await axios.post('/Add-appointment', newAppointment);\n      setData(response.data);\n      if (response.data.status === 200) {\n        toast.success(response.data.message);\n      }\n    }\n  };\n\n  // Handle deleting appointments\n  const handleEventDelete = async appointmentId => {\n    setAppointments(appointments.filter(appt => appt.id !== appointmentId));\n    // onDelete(appointmentId); // Delete from the database\n    const response = await axios.post('/Delete-appointment', appointmentId);\n    if (response.data.status === 200) {\n      toast.success(response.data.message);\n    }\n  };\n  const handleEventDrop = ({\n    event,\n    start,\n    end\n  }) => {\n    const updatedEvent = {\n      ...event,\n      start,\n      end\n    };\n    console.log(\"updatedEvent\", updatedEvent.id);\n    setAppointments(prev => prev.map(appt => appt.id === event.id ? updatedEvent : appt));\n    onUpdate(handleUpdateAppointment()); // Update in the database\n\n    // const response = await axios.post('/Update-appointment',appointmentId);\n    // if(response.data.status === 200){\n    //   toast.success(response.data.message);\n    // }\n  };\n\n  // const handleAddAppointment = async (appointment) => {\n  //   console.log(\"from app\",appointment);\n\n  //   const response = await axios.post('/Add-appointment', appointment);\n  //   setData(response.data);\n  //   console.log(\"Res\",data);\n  //   if(response.data.status === 200){\n  //     toast.success(response.data.message);\n  //   }\n\n  // }\n\n  // const handleDeleteAppointment = async (appointmentId) => {\n  //   console.log(\"from delete\",appointmentId);\n  //   const response = await axios.post('/Delete-appointment',appointmentId);\n  //   if(response.data.status === 200){\n  //     toast.success(response.data.message);\n  //   }\n  // };\n\n  const handleUpdateAppointment = async appointmentId => {\n    console.log(\"from update\", appointmentId);\n    const response = await axios.post('/Update-appointment', appointmentId);\n    console.log(\"Updated\", response.data);\n    if (response.data.status === 200) {\n      toast.success(response.data.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(DragAndDropCalendar, {\n      localizer: localizer,\n      events: appointments,\n      defaultView: \"week\",\n      selectable: true,\n      onSelectSlot: handleSelectSlot,\n      onSelectEvent: event => window.confirm(\"Delete this appointment?\") && handleEventDelete(event.id),\n      resizable: true,\n      onEventDrop: handleEventDrop,\n      onEventResize: handleEventDrop,\n      style: {\n        height: \"80vh\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 1\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 124,\n    columnNumber: 5\n  }, this);\n};\n_s(Calender, \"K7XXuhXr3oQqOMG9+4Wku/lYWK0=\");\n_c = Calender;\nexport default Calender;\nvar _c;\n$RefreshReg$(_c, \"Calender\");","map":{"version":3,"names":["React","useState","useEffect","Calendar","momentLocalizer","moment","toast","axios","withDragAndDrop","jsxDEV","_jsxDEV","localizer","Calender","onAdd","onDelete","onUpdate","_s","DragAndDropCalendar","appointments","setAppointments","data","setData","console","log","fetchAppointments","response","fetch","json","handleSelectSlot","slotInfo","title","prompt","newAppointment","id","Date","now","start","end","post","status","success","message","handleEventDelete","appointmentId","filter","appt","handleEventDrop","event","updatedEvent","prev","map","handleUpdateAppointment","children","events","defaultView","selectable","onSelectSlot","onSelectEvent","window","confirm","resizable","onEventDrop","onEventResize","style","height","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/React_programs/myreact/weekly-calender/client/src/Components/Calender.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Calendar, momentLocalizer } from \"react-big-calendar\";\r\nimport moment from \"moment\";\r\nimport {toast} from 'react-hot-toast';\r\nimport axios from \"axios\";\r\nimport \"react-big-calendar/lib/css/react-big-calendar.css\";\r\n\r\n\r\nimport withDragAndDrop from 'react-big-calendar/lib/addons/dragAndDrop';\r\nimport 'react-big-calendar/lib/addons/dragAndDrop/styles.css';\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst localizer = momentLocalizer(moment);\r\n\r\nconst Calender = ({ onAdd, onDelete,onUpdate }) => {\r\n    const DragAndDropCalendar = withDragAndDrop(Calendar)\r\n  const [appointments, setAppointments] = useState([]);\r\n  const [data,setData] = useState([]);\r\n  console.log(appointments);\r\n\r\n  // Fetch appointments from the database\r\n  useEffect(() => {\r\n    async function fetchAppointments() {\r\n      const response = await fetch(\"/\");\r\n      const data = await response.json();\r\n      console.log(data);\r\n      setAppointments(data);\r\n    }\r\n    fetchAppointments();\r\n  }, []);\r\n\r\n  // Handle adding appointments\r\n  const handleSelectSlot = async(slotInfo) => {\r\n    const title = prompt(\"Enter appointment title:\");\r\n    if (title) {\r\n      const newAppointment = {\r\n        id: Date.now(),\r\n        title,\r\n        start: slotInfo.start,\r\n        end: slotInfo.end,\r\n      };\r\n      setAppointments([...appointments, newAppointment]);\r\n      // onAdd(handleAddAppointment); // Update in the database\r\n      \r\n    const response = await axios.post('/Add-appointment', newAppointment);\r\n    setData(response.data);\r\n    if(response.data.status === 200){\r\n      toast.success(response.data.message);\r\n    }\r\n\r\n\r\n\r\n    }\r\n  };\r\n\r\n  // Handle deleting appointments\r\n  const handleEventDelete = async(appointmentId) => {\r\n    setAppointments(appointments.filter((appt) => appt.id !== appointmentId));\r\n    // onDelete(appointmentId); // Delete from the database\r\n    const response = await axios.post('/Delete-appointment',appointmentId);\r\n    if(response.data.status === 200){\r\n      toast.success(response.data.message);\r\n    }\r\n  };\r\n\r\n\r\n  const handleEventDrop = ({ event, start, end }) => {\r\n   \r\n    const updatedEvent = { ...event, start, end };\r\n    console.log(\"updatedEvent\",updatedEvent.id);\r\n    setAppointments((prev) =>\r\n      prev.map((appt) => (appt.id === event.id ? updatedEvent : appt))\r\n    );\r\n    onUpdate(handleUpdateAppointment()); // Update in the database\r\n    \r\n    // const response = await axios.post('/Update-appointment',appointmentId);\r\n    // if(response.data.status === 200){\r\n    //   toast.success(response.data.message);\r\n    // }\r\n\r\n\r\n  };\r\n\r\n  // const handleAddAppointment = async (appointment) => {\r\n  //   console.log(\"from app\",appointment);\r\n\r\n  //   const response = await axios.post('/Add-appointment', appointment);\r\n  //   setData(response.data);\r\n  //   console.log(\"Res\",data);\r\n  //   if(response.data.status === 200){\r\n  //     toast.success(response.data.message);\r\n  //   }\r\n\r\n  // }\r\n\r\n\r\n\r\n  // const handleDeleteAppointment = async (appointmentId) => {\r\n  //   console.log(\"from delete\",appointmentId);\r\n  //   const response = await axios.post('/Delete-appointment',appointmentId);\r\n  //   if(response.data.status === 200){\r\n  //     toast.success(response.data.message);\r\n  //   }\r\n  // };\r\n\r\n  const handleUpdateAppointment = async (appointmentId) => {\r\n    console.log(\"from update\",appointmentId);\r\n\r\n    const response = await axios.post('/Update-appointment',appointmentId);\r\n    console.log(\"Updated\",response.data);\r\n    if(response.data.status === 200){\r\n      toast.success(response.data.message);\r\n    }\r\n  }\r\n\r\n\r\n  return (\r\n    <div>\r\n      {/* <Calendar\r\n        localizer={localizer}\r\n        events={appointments}\r\n        defaultView=\"week\"\r\n        selectable\r\n        DragAndDropCalendar={DragAndDropCalendar}\r\n        onSelectSlot={handleSelectSlot}\r\n        onSelectEvent={(event) =>\r\n          window.confirm(\"Delete this appointment?\") &&\r\n          handleEventDelete(event.id)\r\n        }\r\n        resizable\r\n        onEventDrop={handleEventDrop}\r\n        onEventResize={handleEventDrop}\r\n        style={{ height: \"80vh\" }}\r\n      /> */}\r\n\r\n<DragAndDropCalendar\r\n    localizer={localizer}\r\n    events={appointments}\r\n    defaultView=\"week\"\r\n    selectable\r\n    onSelectSlot={handleSelectSlot}\r\n    onSelectEvent={(event) =>\r\n      window.confirm(\"Delete this appointment?\") &&\r\n      handleEventDelete(event.id)\r\n    }\r\n    resizable\r\n    onEventDrop={handleEventDrop}\r\n    onEventResize={handleEventDrop}\r\n  \r\n    style={{ height: \"80vh\" }}\r\n  />\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Calender;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}